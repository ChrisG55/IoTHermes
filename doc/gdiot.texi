\input texinfo @c SPDX-License-Identifier: GPL-3.0-or-later
@documentencoding UTF-8

@include config.texi

@settitle GDIoT Documentation

@copying
GDIoT Copyright @copyright{} @value{COPYYEAR} @value{AUTHOR}

@quotation
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it under certain conditions.
@end quotation
@end copying

@titlepage
@title Generalized Deduplication for IoT
@author @value{AUTHOR}
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents

@ifnottex
@node Top
@top GDIoT

Chapters in the @acronym{GDIoT} documentation.
@end ifnottex

@menu
* GDIoT Copying Conditions:: What you are allowed to do with this software
* Introduction:: The idea behind @acronym{GDIoT}
* Build Systems:: Description of the build systems and how to used them
* Tasks:: An abstraction of threads
* Library:: Hermes protocol implementation
* Program:: Programs that come with @acronym{GDIoT}
* Index:: An index of concepts
* Function Index:: An index of all library functions
* Program Index:: An index of all involved programs
@end menu

@node GDIoT Copying Conditions
@unnumbered GDIoT Copying Conditions

GDIoT: Generalized Deduplication for the Internet of Things
Copyright @copyright{} @value{COPYYEAR}  @value{AUTHOR}

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see @url{https://www.gnu.org/licenses/}.

@node Introduction
@chapter Introduction

@cindex chapter, Introduction

@acronym{GDIoT,Generalized Deduplication for @acronym{IoT,Internet of Things}} is a open-source software project that enables generalized deduplication for @acronym{IoT} through the Hermes protocol.

@node Build Systems
@chapter Build Systems

@cindex chapter, Build Systems

For each type of operating system @acronym{GDIoT} should provide a dedicated build system.
Build and configuration files for these build systems integrate all subsystems in the @acronym{GDIoT} without interfering with any other build systems.
The project's root directory contains the core files of the build system.
Each subsystem is handled completely separately by each build system and relations between subsystem exist only through dependencies.

The UNIX build system is inspired by @emph{ffbuild}.
@pindex gcc
It uses a POSIX interface to the underlying UNIX operating system and other operating system-specific interfaces for tool such as @command{gcc}.

@pindex configure
Due to time constraints during the development of the @acronym{GDIoT} project, it lacks a @file{configure} script.
Instead it provides a configuration template @file{config.tmpmk} that needs to be modified by hand before compiling the project.
@pindex make
After modifying the configuration template save it as @file{config.mk} in @acronym{GDIoT}'s root directory and run @command{make}.

@example
cp config.tmph config.h
$EDITOR config.h
cp config.tmpmk config.mk
$EDITOR config.mk
cp config.tmpsh config.sh
$EDITOR config.sh
cp doc/config.tpmi doc/config.texi
$EDITOR doc/config.texi
make
@end example

@node Tasks
@chapter Tasks

@cindex chapter, Tasks

Tasks are an abstraction of threads in @acronym{GDIoT}.
Depending on the operating system there are different thread implementations.
The task abstraction layer unifies these different thread interfaces transparently into a single common interface.

@node Task Interface
@section Interface

@cindex section, Interface (Task)

@table @code
@item int task_create(void *(*func)(void *ctx), task_t *task, void *ctx)
The @code{task_create} function creates a new task and returns an index in @code{task} to identify the newly created task.
The task also requires a function @code{func} to execute as well as a context @code{ctx} in order to do some useful work.
Upon successful completion the function call will return @code{0}, otherwise @code{1} is returned and an error code will be set.
@item int task_free(task_t task)
The @code{task_free} function frees up any resources allocated for the task @code{task}.
This function has to be called once the task has finished executing.
Upon successful completion the function returns @code{0}, otherwise @code{1} is returned.
@item int task_join(task_t task, void **ret_ptr)
The @code{task_join} function blocks until it has joined with the specified task @code{task}, i.e., the task has finished executing.
If @code{ret_ptr} is not @code{NULL}, then it will contain the task's return value.
Upon successful completion the function returns @code{0}, otherwise a non zero value is returned indicating the error.
@item int task_multijoin(int n, task_t *tasks, void **ret_ptrs, size_t ret_sz)
The @code{task_multijoin} function blocks until it has joined with exactly @code{n} tasks in @code{tasks}.
If @code{ret_ptrs} is not @code{NULL} and @code{ret_sz} has a positive non zero value, then it will contain the return values of the @code{n} tasks.
Upon successful completion the function returns @code{0}, otherwise a non zero value is returned indicating the error.
@end table

@node Library
@chapter Library

@cindex chapter, Library

@include hermes.texi

@node Program
@chapter Program

@cindex chapter, Program

@acronym{GDIoT} provides a reference implementation for a source node.

@menu
* gdiot-src:: source node
* gdiot-gate:: intermediate node
* gdiot-evap:: sink node
@end menu

@node gdiot-src
@section gdiot-src

@cindex section, gdiot-src
@pindex gdiot-src

@command{gdiot-src} is a reference implementation for a source node.

@node gdiot-gate
@section gdiot-gate

@cindex section, gdiot-gate
@pindex gdiot-gate

@command{gdiot-gate} is a reference implementation for an intermediate node.

@node gdiot-evap
@section gdiot-evap

@cindex section, gdiot-evap
@pindex gdiot-evap

@command{gdiot-evap} is a reference implementation for a sink node.

@node Index
@unnumbered Index

@printindex cp

@node Function Index
@unnumbered Function Index

@printindex fn

@node Program Index
@unnumbered Program Index

@printindex pg

@bye
